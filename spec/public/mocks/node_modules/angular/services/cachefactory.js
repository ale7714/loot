export default class CacheFactoryMockProvider {
	constructor() {
		// Mock $cache object
		this.$cache = {
			put: sinon.stub(),
			get: sinon.stub(),
			info: sinon.stub(),
			remove: sinon.stub(),
			removeAll: sinon.stub(),
			destroy: sinon.stub()
		};

		// Mock templates cache
		this.templatesCache = {
			removeAll: sinon.stub()
		};

		// Mock $cacheFactory object, returns the mock $cache object
		this.$cacheFactory = () => this.$cache;

		// Returns the list of caches
		this.$cacheFactory.info = sinon.stub().returns([
			{id: "templates"},
			{id: "test"}
		]);

		// Returns a cache by it's name
		this.$cacheFactory.get = sinon.stub();
		this.$cacheFactory.get.withArgs("templates").returns(this.templatesCache);
		this.$cacheFactory.get.withArgs("test").returns(this.$cache);
	}

	$get() {
		return this.$cacheFactory;
	}
}

CacheFactoryMockProvider.$inject = [];